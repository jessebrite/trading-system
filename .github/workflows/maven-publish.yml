# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]
  push:
    branches: [main]
  pull_request:
    branches: [nain]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_Pssword

#        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build and push client-service with Maven
      uses: mr-smithers-excellent/docker-build-push@v5
      run: mvn -B package dockerfile:push --file client-service/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASWORD: ${{ secrets.DOCKER_PASSWORD }}


    - name: Build and push order-service with Maven
      uses: mr-smithers-excellent/docker-build-push@v5
      run: mvn -B package dockerfile:push --file order-service/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASWORD: ${{ secrets.DOCKER_PASSWORD }}


    - name: Build and push transaction-service with Maven
      uses: mr-smithers-excellent/docker-build-push@v5
      run: mvn -B package dockerfile:push --file transaction-service/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASWORD: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and Push Docker Image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: jessebrite/client-service
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
